import HTTPClient.Cookie
import HTTPClient.HTTPResponse
import HTTPClient.NVPair
import groovy.json.JsonSlurper
import net.grinder.plugin.http.HTTPPluginControl
import net.grinder.plugin.http.HTTPRequest
import net.grinder.script.GTest
import net.grinder.scriptengine.groovy.junit.GrinderRunner
import net.grinder.scriptengine.groovy.junit.annotation.BeforeProcess
import net.grinder.scriptengine.groovy.junit.annotation.BeforeThread
import net.grinder.scriptengine.groovy.junit.annotation.Repeat
import org.junit.Test
import org.junit.runner.RunWith

import static net.grinder.script.Grinder.grinder
import static org.hamcrest.Matchers.containsString
import static org.hamcrest.Matchers.is
import static org.junit.Assert.assertThat

// import static net.grinder.util.GrinderUtils.* // You can use this if you're using nGrinder after 3.2.3

/**
 * A simple example using the HTTP plugin that shows the retrieval of a
 * single page via HTTP.
 *
 * This script is automatically generated by ngrinder.
 *
 * @author admin
 */


@Repeat(1)
@RunWith(GrinderRunner)
class TestRunnerRecord {

    public static GTest test
    public static HTTPRequest request
    public static NVPair[] params = [
            new NVPair("name", "zhangsan")
    ]
    public static Cookie[] cookies = []

    public static NVPair[] headers = [
            new NVPair("Content-Type", "application/json")
    ]
    // 修改开头的成员变量

    private String jsonresult


    public static GTest test1
    public static GTest test2

// ...

    @BeforeProcess
    public static void beforeProcess() {
        test1 = new GTest(1, "foo_stats")  // 参数为 ID、显示名
        request = new HTTPRequest()

    }

    @BeforeThread
    public void beforeThread() {
        test1.record(this, "requests")  // 参数为 this、@Test 注解的方法名

        // ...
    }

    @Test
    public void requests() {
        HTTPResponse result = request.GET("http://192.168.1.232:8763/getcity")

        grinder.logger.info("############## 返回结果: " + result.getText()+ " ##############");
        grinder.logger.info("############## 返回状态码: " + result.getStatusCode()+ " ##############");

        // 解析JSON
        def jsonData = new JsonSlurper().parseText(result.text)
        grinder.logger.info("############## 返回结果: " + jsonData + " ##############");
        grinder.logger.info("############## 解析返回结果: " + jsonData.result + " ##############");

        if (result.statusCode == 301 || result.statusCode == 302) {
            grinder.logger.warn("Warning. The response may not be correct. The response code was {}.", result.statusCode);
        } else {
            assertThat(result.statusCode, is(200));
            assertThat(result.text, containsString("result"));
        }
    }



}
